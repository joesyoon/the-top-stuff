{"ast":null,"code":"import _classCallCheck from \"/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/src/components/TopFood.js\";\nimport React, { Component } from 'react'; //import './style.css';\n\nimport 'whatwg-fetch';\nimport '../TopFood.css';\nimport { Grid, Row, Col } from 'react-bootstrap'; //var rapid = new RapidAPI(\"default-application_5bf3605ee4b02e4415402cd8\", \"99f1d82f-be7b-42ee-9ec2-b4f3c7f8c138\");\n\nvar TopFood =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TopFood, _Component);\n\n  function TopFood(props) {\n    _classCallCheck(this, TopFood);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TopFood).call(this));\n  }\n\n  _createClass(TopFood, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"rightContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Food, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TopFood;\n}(Component);\n\nexport { TopFood as default };\n\nvar Food =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Food, _Component2);\n\n  function Food(props) {\n    var _this;\n\n    _classCallCheck(this, Food);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Food).call(this));\n\n    _this.handle = function (state) {\n      _this.setState(state);\n\n      _this.setState({\n        introComp: true,\n        categoryComp: false\n      });\n    };\n\n    _this.chosen = function (state) {\n      _this.setState(state);\n\n      _this.setState({\n        introComp: true,\n        categoryComp: true,\n        restaurantsComp: false,\n        resultsComp: true\n      });\n    };\n\n    _this.chosenRestaurants = function (state) {\n      _this.setState(state);\n\n      _this.setState({\n        introComp: true,\n        categoryComp: true,\n        restaurantsComp: true,\n        resultsComp: false\n      });\n    };\n\n    _this.handlePrice = function (state) {\n      _this.setState({\n        price: state.price\n      });\n    };\n\n    _this.state = {\n      cityName: '',\n      category: [],\n      introComp: false,\n      categoryComp: true,\n      restaurantsComp: true,\n      resultsComp: true,\n      categoryID: [],\n      price: 0\n    };\n    return _this;\n  } //Toggles category questions to pop up\n\n\n  _createClass(Food, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"bodyContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        \"aria-label\": \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Top Food\"), React.createElement(Intro, {\n        active: this.state.introComp,\n        priceRange: this.handlePrice,\n        data: this.handle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Category, {\n        idChosen: this.chosen,\n        data: this.state,\n        active: this.state.categoryComp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Restaurants, {\n        restaurantsChosen: this.chosenRestaurants,\n        active: this.state.restaurantsComp,\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Results, {\n        data: this.state,\n        active: this.state.resultsComp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Food;\n}(Component); //Contains introductory information and enter zip code\n\n\nvar Intro =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Intro, _Component3);\n\n  function Intro(props) {\n    var _this2;\n\n    _classCallCheck(this, Intro);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Intro).call(this));\n\n    _this2.handleChange = function (_ref) {\n      var target = _ref.target;\n\n      _this2.setState({\n        cityName: target.value\n      });\n    };\n\n    _this2.fetchData = function () {\n      _this2.fetchCityData();\n    };\n\n    _this2.handlePrice = function (state) {\n      _this2.setState({\n        price: state.price\n      });\n\n      _this2.props.priceRange(_this2.state);\n    };\n\n    _this2.state = {\n      cityName: \"\",\n      category: [],\n      cityID: null,\n      price: 0\n    };\n    return _this2;\n  }\n\n  _createClass(Intro, [{\n    key: \"fetchCityData\",\n    //Grabs data based off city\n    value: function fetchCityData() {\n      var _this3 = this;\n\n      var cityName = this.state.cityName;\n\n      if (cityName.length > 0) {\n        var url = 'https://developers.zomato.com/api/v2.1/locations?query=' + cityName;\n        return fetch(url, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"user-key\": 'd0325b0e365e86fe688a11fe58eaf786'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          var id = json.location_suggestions[0].entity_id;\n\n          _this3.setState({\n            cityID: id\n          });\n\n          _this3.fetchCuisine(id);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    } //Grabs different categories of restaurants based off city\n\n  }, {\n    key: \"fetchCuisine\",\n    value: function fetchCuisine(cityID) {\n      var _this4 = this;\n\n      var url = 'https://developers.zomato.com/api/v2.1/cuisines?city_id=' + cityID;\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"user-key\": 'd0325b0e365e86fe688a11fe58eaf786'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var categories = [];\n\n        for (var i = 0; i < json.cuisines.length; i++) {\n          var category = {\n            name: json.cuisines[i].cuisine.cuisine_name,\n            id: json.cuisines[i].cuisine.cuisine_id\n          };\n          categories.push(category);\n        }\n\n        _this4.setState({\n          category: categories\n        });\n\n        _this4.props.data(_this4.state);\n\n        return json;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        hidden: this.props.active,\n        className: \"introContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"introContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        \"aria-label\": \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Top Food\"), \" will help you pick from the top restaurants around you.\"), React.createElement(\"p\", {\n        \"aria-label\": \"direction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Input your city name below to get started!\")), React.createElement(\"div\", {\n        className: \"zipMoney\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"zipCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        \"aria-label\": \"input\",\n        placeholder: \"Enter city name\",\n        onChange: this.handleChange,\n        type: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"City Name\"))), React.createElement(\"div\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.fetchData,\n        className: \"arrowSubmit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \">>>\")));\n    }\n  }]);\n\n  return Intro;\n}(Component);\n\nvar Price =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(Price, _Component4);\n\n  function Price(props) {\n    var _this5;\n\n    _classCallCheck(this, Price);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(Price).call(this));\n\n    _this5.highlight = function (event) {\n      var price = parseInt(event.target.id);\n\n      _this5.setState({\n        price: price\n      });\n\n      _this5.props.priceRange(_this5.state);\n    };\n\n    var list = _this5.setRange();\n\n    _this5.state = {\n      range: list,\n      price: 0\n    };\n    return _this5;\n  }\n\n  _createClass(Price, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"setRange\",\n    value: function setRange() {\n      var _this6 = this;\n\n      var temp = ['$', '$', '$'];\n      var counter = 1;\n      var list = temp.map(function (symbol) {\n        var comp = React.createElement(\"span\", {\n          onClick: _this6.highlight,\n          id: counter,\n          className: \"dollar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, symbol);\n        counter++;\n        return comp;\n      });\n      return list;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"money\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.state.range, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Price Range\"));\n    }\n  }]);\n\n  return Price;\n}(Component); //Grid of different categories of restaurants\n\n\nvar Category =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(Category, _Component5);\n\n  function Category(props) {\n    var _this7;\n\n    _classCallCheck(this, Category);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(Category).call(this));\n\n    _this7.handle = function (id) {\n      _this7.state.categoryID.push(id);\n\n      _this7.props.idChosen(_this7.state);\n    };\n\n    _this7.state = {\n      categoryID: []\n    };\n    return _this7;\n  }\n\n  _createClass(Category, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      return React.createElement(\"div\", {\n        className: \"categoryContainer\",\n        hidden: this.props.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        \"aria-label\": \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.\"), React.createElement(\"p\", {\n        \"aria-label\": \"direction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Select your preferred category below.\")), React.createElement(CuisineList, {\n        catID: this.handle,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Category;\n}(Component); //Single card that holds information about either category or restaurant\n\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(Card, _Component6);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Card).call(this));\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var category = this.props.category;\n      var comp;\n\n      if (category.address != undefined) {\n        comp = React.createElement(\"div\", {\n          className: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, category.address), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, category.rating), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, category.price));\n      }\n\n      return React.createElement(\"div\", {\n        \"aria-label\": \"choice\",\n        onClick: this.props.onClick,\n        \"data-key\": category.id,\n        className: \"categoryCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"categoryName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, category.name), comp);\n    }\n  }]);\n\n  return Card;\n}(Component); //List of categories of food\n\n\nvar CuisineList =\n/*#__PURE__*/\nfunction (_Component7) {\n  _inherits(CuisineList, _Component7);\n\n  function CuisineList(props) {\n    var _this8;\n\n    _classCallCheck(this, CuisineList);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(CuisineList).call(this));\n\n    _this8.chosen = function (event) {\n      var id = event.target.getAttribute(\"data-key\");\n\n      _this8.state.categoryIDs.push(id);\n    };\n\n    _this8.send = function () {\n      _this8.props.catID(_this8.state.categoryIDs);\n    };\n\n    _this8.active = function (event) {\n      var element = event.target;\n      element.style.backgroundColor = \"#f39c12\";\n    };\n\n    _this8.state = {\n      categoryIDs: []\n    };\n    return _this8;\n  }\n\n  _createClass(CuisineList, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var data = this.props.data.category;\n      var categories = data.map(function (category) {\n        var comp = React.createElement(Col, {\n          xs: 12,\n          md: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(Card, {\n          onClick: _this9.active,\n          category: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }));\n        return comp;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"aria-label\": \"submit\",\n        onClick: this.send,\n        className: \"arrowSubmit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \">>>\"), React.createElement(\"div\", {\n        onClick: this.chosen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })), categories));\n    }\n  }]);\n\n  return CuisineList;\n}(Component); //List of different types of restaurants based off filters\n\n\nvar Restaurants =\n/*#__PURE__*/\nfunction (_Component8) {\n  _inherits(Restaurants, _Component8);\n\n  function Restaurants(props) {\n    var _this10;\n\n    _classCallCheck(this, Restaurants);\n\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(Restaurants).call(this));\n\n    _this10.handleClick = function (event) {\n      event.currentTarget.style.backgroundColor = \"#f39c12\";\n\n      _this10.state.eliminated.push(event.currentTarget.getAttribute(\"data-key\"));\n    };\n\n    _this10.send = function () {\n      _this10.props.restaurantsChosen(_this10.state);\n    };\n\n    _this10.state = {\n      restaurants: null,\n      eliminated: []\n    };\n    return _this10;\n  }\n\n  _createClass(Restaurants, [{\n    key: \"fetchRestaurants\",\n    value: function fetchRestaurants(categoryIDs, cityID, range) {\n      var _this11 = this;\n\n      if (categoryIDs != undefined && categoryIDs.length > 0) {\n        var catID = categoryIDs[0];\n\n        for (var i = 1; i < categoryIDs.length; i++) {\n          catID += '%2C%20' + categoryIDs[i];\n        }\n\n        var url = 'https://developers.zomato.com/api/v2.1/search?entity_id=' + cityID + '&entity_type=city&cuisines=' + catID + '&order=asc';\n        return fetch(url, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"user-key\": 'd0325b0e365e86fe688a11fe58eaf786'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          var restaurants = json.restaurants;\n          var list = restaurants.map(function (restaurantObj) {\n            var restaurant = restaurantObj.restaurant;\n            var category = {\n              name: restaurant.name,\n              id: restaurant.id,\n              address: restaurant.location.address,\n              price: restaurant.price_range,\n              rating: restaurant.user_rating.rating_text\n            };\n            var comp = React.createElement(Col, {\n              xs: 12,\n              md: 3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 390\n              },\n              __self: this\n            }, React.createElement(Card, {\n              onClick: _this11.handleClick,\n              category: category,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 391\n              },\n              __self: this\n            }));\n            return comp;\n          });\n\n          _this11.setState({\n            restaurants: list\n          });\n\n          return list;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      var categoryIDs = data.categoryID;\n      var range = data.price;\n      var cityID = this.props.data.cityID;\n      this.fetchRestaurants(categoryIDs[0], cityID, range);\n      var restaurantsDisplay;\n\n      if (this.state.restaurants != null) {\n        restaurantsDisplay = this.state.restaurants;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"restaurantContainer\",\n        hidden: this.props.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        \"aria-label\": \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.\"), React.createElement(\"p\", {\n        \"aria-label\": \"direction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Eliminate two restaurants from below.\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, restaurantsDisplay), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"aria-label\": \"submit\",\n        onClick: this.send,\n        className: \"arrowSubmit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \">>>\")));\n    }\n  }]);\n\n  return Restaurants;\n}(Component); //Chosen restaurant based off filters\n\n\nvar Results =\n/*#__PURE__*/\nfunction (_Component9) {\n  _inherits(Results, _Component9);\n\n  function Results(props) {\n    _classCallCheck(this, Results);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Results).call(this));\n  }\n\n  _createClass(Results, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      console.log(data);\n      var result;\n\n      if (data.restaurants != undefined) {\n        var eliminated = data.eliminated;\n        var restaurants = data.restaurants.filter(function (restaurant) {\n          var id = restaurant.props.children.props.category.id;\n          return eliminated.includes(id) == false;\n        });\n        var index = Math.floor(Math.random() * restaurants.length);\n        console.log(\"carrot\");\n        console.log(restaurants[index]);\n        console.log(restaurants[index].props);\n        result = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, \"Based off your preferences, this is the most ideal restaurant for you!\"), React.createElement(Card, {\n          category: restaurants[index].props.children.props.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        \"aria-label\": \"result\",\n        className: \"resultContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, result);\n    }\n  }]);\n\n  return Results;\n}(Component);","map":{"version":3,"sources":["/Users/kishorevasan/Desktop/github_repos/info340/the-top-stuff/my-app/src/components/TopFood.js"],"names":["React","Component","Grid","Row","Col","TopFood","props","Food","handle","state","setState","introComp","categoryComp","chosen","restaurantsComp","resultsComp","chosenRestaurants","handlePrice","price","cityName","category","categoryID","Intro","handleChange","target","value","fetchData","fetchCityData","priceRange","cityID","length","url","fetch","method","headers","then","response","json","id","location_suggestions","entity_id","fetchCuisine","catch","error","console","categories","i","cuisines","name","cuisine","cuisine_name","cuisine_id","push","data","active","Price","highlight","event","parseInt","list","setRange","range","temp","counter","map","symbol","comp","Category","idChosen","Card","address","undefined","rating","onClick","CuisineList","getAttribute","categoryIDs","send","catID","element","style","backgroundColor","Restaurants","handleClick","currentTarget","eliminated","restaurantsChosen","restaurants","restaurantObj","restaurant","location","price_range","user_rating","rating_text","fetchRestaurants","restaurantsDisplay","Results","log","result","filter","children","includes","index","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import './style.css';\nimport 'whatwg-fetch';\nimport '../TopFood.css';\nimport {Grid, Row, Col} from 'react-bootstrap'\n//var rapid = new RapidAPI(\"default-application_5bf3605ee4b02e4415402cd8\", \"99f1d82f-be7b-42ee-9ec2-b4f3c7f8c138\");\n\nexport default class TopFood extends Component {\n    constructor(props) {\n        super();\n    }\n\n    render() {\n        return(\n            <div className=\"rightContainer\">\n                <Food></Food>\n            </div>\n        );\n    }\n}\n\nclass Food extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      cityName:'',\n      category:[],\n      introComp:false,\n      categoryComp:true,\n      restaurantsComp:true,\n      resultsComp:true,\n      categoryID:[], \n      price:0\n    }\n  }\n\n  //Toggles category questions to pop up\n  handle = (state) => {\n    this.setState(state);\n    this.setState({\n      introComp:true,\n      categoryComp:false\n    });\n  } \n\n  //Toggles restaurant grid\n  chosen = (state) => {\n    this.setState(state);\n    this.setState({\n      introComp:true,\n      categoryComp:true,\n      restaurantsComp:false,\n      resultsComp:true\n    });\n    \n  }\n\n  //Toggles the chosen restaurant for user\n  chosenRestaurants = (state) => {\n    this.setState(state);\n    this.setState({\n      introComp:true,\n      categoryComp:true,\n      restaurantsComp:true,\n      resultsComp:false\n    });\n  }\n\n  handlePrice = (state) => {\n    this.setState({price:state.price});\n  }\n  \n  render() {\n    return (\n      <div className=\"bodyContainer\">\n        <div className=\"container\">\n          <h1 aria-label=\"title\">Top Food</h1>\n          <Intro active={this.state.introComp} priceRange={this.handlePrice} data={this.handle}></Intro>\n          <Category idChosen={this.chosen} data={this.state} active={this.state.categoryComp}></Category>\n          <Restaurants restaurantsChosen={this.chosenRestaurants}active={this.state.restaurantsComp} data={this.state}></Restaurants>\n          <Results data={this.state} active={this.state.resultsComp}></Results>\n        </div>\n      </div>\n\n    )\n  }\n}\n\n//Contains introductory information and enter zip code\nclass Intro extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      cityName:\"\",\n      category:[],\n      cityID:null,\n      price:0\n    }\n  }\n\n  handleChange = ({target}) => {\n    this.setState({\n      cityName:target.value\n    })\n  }\n\n  //Grabs data based off city\n  fetchCityData() {\n    let cityName = this.state.cityName;\n    if(cityName.length > 0) {\n      let url = 'https://developers.zomato.com/api/v2.1/locations?query=' + cityName;\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"user-key\": 'd0325b0e365e86fe688a11fe58eaf786'\n        }\n      })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(json => {\n        let id = json.location_suggestions[0].entity_id;\n        this.setState({cityID:id});\n        this.fetchCuisine(id);\n      })\n      .catch(function(error) {\n        console.error(error);\n      });  \n    }\n  }\n\n  //Grabs different categories of restaurants based off city\n  fetchCuisine(cityID) {\n    let url = 'https://developers.zomato.com/api/v2.1/cuisines?city_id=' + cityID;\n    return fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"user-key\": 'd0325b0e365e86fe688a11fe58eaf786'\n      }\n    })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(json => {\n      let categories = [];\n      for(let i = 0; i < json.cuisines.length; i++) {\n        let category = {\n          name:json.cuisines[i].cuisine.cuisine_name,\n          id:json.cuisines[i].cuisine.cuisine_id\n        };\n        categories.push(category);\n      }\n      this.setState({category:categories});\n      this.props.data(this.state)\n      return json;\n    })\n    .catch(function(error) {\n      console.error(error);\n    });\n  }\n\n  fetchData = () => {\n    this.fetchCityData()\n  }\n\n  handlePrice = (state) => {\n    this.setState({price:state.price});\n    this.props.priceRange(this.state);\n  };\n\n  render() {\n    return(\n      <div hidden={this.props.active} className=\"introContainer\">\n        <div className=\"introContent\">\n          <h5 aria-label=\"description\"><strong>Top Food</strong> will help you pick from the top restaurants around you.</h5>\n          <p aria-label=\"direction\">Input your city name below to get started!</p>\n        </div>\n        <div className=\"zipMoney\">\n          <div className=\"zipCode\">\n            <input aria-label=\"input\" placeholder=\"Enter city name\" onChange={this.handleChange} type=\"textarea\"/>\n            <label>City Name</label>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <div onClick={this.fetchData} className=\"arrowSubmit\">\n            >>>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Price extends Component {\n  constructor(props) {\n    super();\n    let list = this.setRange();\n    this.state = {\n      range:list,\n      price:0\n    }\n  }\n\n  highlight = (event) => {\n    let price = parseInt(event.target.id);\n    this.setState({price:price});\n    this.props.priceRange(this.state);\n  }\n\n  componentDidMount() {\n  }\n\n  setRange() {\n    let temp = ['$', '$', '$'];\n    let counter = 1;\n    let list = temp.map(symbol => {\n      let comp = <span onClick={this.highlight} id={counter} className=\"dollar\">{symbol}</span>;\n      counter++;\n      return comp;\n    });\n    return list;\n  }\n\n  render() {\n\n    return(\n      <div className=\"money\">\n        {this.state.range}\n        <label>Price Range</label>\n      </div>\n    );\n  }\n}\n\n//Grid of different categories of restaurants\nclass Category extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      categoryID:[]\n    }\n  }\n\n  handle = (id) => {\n    this.state.categoryID.push(id);\n    this.props.idChosen(this.state);\n  }\n\n  render() {\n    let data = this.props.data;\n    return (\n      <div className=\"categoryContainer\" hidden={this.props.active}>\n        <div>\n          <h5 aria-label=\"description\">To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.</h5>\n          <p aria-label=\"direction\">Select your preferred category below.</p>\n        </div>\n        <CuisineList catID={this.handle} data={data}></CuisineList>\n      </div>\n    );\n  }\n}\n\n//Single card that holds information about either category or restaurant\nclass Card extends Component {\n  constructor(props) {\n    super();\n  }\n  render() {\n    let category = this.props.category;\n    let comp;\n    if(category.address != undefined) {\n      comp = <div className=\"info\">\n        <h6>{category.address}</h6>\n        <h6>{category.rating}</h6>\n        <h6>{category.price}</h6>\n      </div>\n    }\n    return(\n      <div aria-label=\"choice\" onClick={this.props.onClick} data-key={category.id} className=\"categoryCard\">\n        <h5 className=\"categoryName\">\n          {category.name}\n        </h5>\n        {comp}\n      </div>\n    );\n  }\n}\n\n//List of categories of food\nclass CuisineList extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      categoryIDs:[]\n    }\n  }\n\n  chosen = (event) => {\n    let id = event.target.getAttribute(\"data-key\");\n    this.state.categoryIDs.push(id);\n  }\n\n  send = () => {\n    this.props.catID(this.state.categoryIDs);\n  }\n\n  active = (event) => {\n    let element = event.target;\n    element.style.backgroundColor = \"#f39c12\";\n  }\n\n  render() {\n    let data = this.props.data.category;\n    let categories = data.map(category => {\n      let comp = \n          <Col xs={12} md={3}>\n            <Card onClick={this.active} category={category}></Card>\n          </Col>\n      \n      return comp;\n    });\n    return(\n      <div>\n        <div aria-label=\"submit\" onClick={this.send} className=\"arrowSubmit\">\n          >>>\n        </div>\n        <div onClick={this.chosen}>\n          <Grid>\n            <Row>\n\n            </Row>\n          </Grid>\n          {categories}\n        </div>\n      </div>\n    );\n  }\n}\n\n//List of different types of restaurants based off filters\nclass Restaurants extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      restaurants:null,\n      eliminated:[]\n    }\n  }\n\n  handleClick = (event) => {\n    event.currentTarget.style.backgroundColor = \"#f39c12\";\n    this.state.eliminated.push(event.currentTarget.getAttribute(\"data-key\"));\n  };\n\n  send = () => {\n    this.props.restaurantsChosen(this.state);\n  }\n\n  fetchRestaurants(categoryIDs, cityID, range) {\n    if(categoryIDs != undefined && categoryIDs.length > 0) {\n      let catID = categoryIDs[0];\n      for(let i = 1; i < categoryIDs.length; i++) {\n        catID += '%2C%20' + categoryIDs[i];\n      }\n      let url = 'https://developers.zomato.com/api/v2.1/search?entity_id=' + cityID + '&entity_type=city&cuisines=' + catID + '&order=asc';\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"user-key\": 'd0325b0e365e86fe688a11fe58eaf786'\n        }\n      })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(json => {\n        let restaurants = json.restaurants;\n        let list = restaurants.map(restaurantObj => {\n          let restaurant = restaurantObj.restaurant;\n          let category = {\n            name:restaurant.name,\n            id:restaurant.id,\n            address:restaurant.location.address,\n            price:restaurant.price_range,\n            rating:restaurant.user_rating.rating_text\n          }\n          let comp = <Col xs={12} md={3}>\n            <Card onClick={this.handleClick} category={category}></Card>\n          </Col>\n          return comp;\n        })\n        this.setState({restaurants:list});\n        return list;\n      })\n      .catch(function(error) {\n        console.error(error);\n      });  \n    }\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    let data = this.props.data;\n    let categoryIDs = data.categoryID;\n    let range = data.price;\n    let cityID = this.props.data.cityID;\n    this.fetchRestaurants(categoryIDs[0], cityID, range);\n    let restaurantsDisplay;\n    if(this.state.restaurants != null) {\n      restaurantsDisplay = this.state.restaurants;\n    }\n    return(\n      <div className=\"restaurantContainer\" hidden={this.props.active}>\n        <div>\n          <h5 aria-label=\"description\">To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.</h5>\n          <p aria-label=\"direction\">Eliminate two restaurants from below.</p>\n        </div>\n          <Row>\n            {restaurantsDisplay}\n          </Row>\n          <Row>\n            <div aria-label=\"submit\" onClick={this.send} className=\"arrowSubmit\">\n              >>>\n            </div>\n          </Row>\n      </div>\n    );\n  }\n}\n\n//Chosen restaurant based off filters\nclass Results extends Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    let data = this.props.data;\n    console.log(data);\n    let result;\n    if(data.restaurants != undefined) {\n      let eliminated = data.eliminated;\n      let restaurants = data.restaurants.filter(restaurant => {\n        let id = restaurant.props.children.props.category.id;\n        return eliminated.includes(id) == false\n      })\n      let index = Math.floor(Math.random() * restaurants.length);\n      console.log(\"carrot\");\n      console.log(restaurants[index]);\n      console.log(restaurants[index].props);\n      result = <div><h2>Based off your preferences, this is the most ideal restaurant for you!</h2>\n      <Card category={restaurants[index].props.children.props.category}></Card></div>\n    }\n    \n    return(\n      <div aria-label=\"result\" className=\"resultContent\">\n        {result}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}